openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/games/:
    get:
      operationId: api_games_list
      parameters:
      - in: query
        name: age_group
        schema:
          type: integer
      - in: query
        name: difficulty
        schema:
          type: integer
      - in: query
        name: duration
        schema:
          type: integer
      - in: query
        name: genre
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: max_price
        schema:
          type: number
      - in: query
        name: mechanic
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: min_price
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: player_count
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
          description: ''
    post:
      operationId: api_games_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Game'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /api/games/{id}/:
    get:
      operationId: api_games_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
    put:
      operationId: api_games_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Game'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
    patch:
      operationId: api_games_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGame'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGame'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGame'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
    delete:
      operationId: api_games_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/games/{id}/images/:
    get:
      operationId: api_games_images_retrieve
      description: Custom action to retrieve all images for a specific game
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /ping/:
    get:
      operationId: ping_retrieve
      tags:
      - ping
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    AgeGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    DifficultyLevel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Duration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Game:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        genre:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
          readOnly: true
        genre_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        type:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          readOnly: true
        type_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        mechanic:
          type: array
          items:
            $ref: '#/components/schemas/Mechanic'
          readOnly: true
        mechanic_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        difficulty:
          allOf:
          - $ref: '#/components/schemas/DifficultyLevel'
          readOnly: true
        difficulty_id:
          type: integer
          writeOnly: true
        player_count:
          allOf:
          - $ref: '#/components/schemas/PlayerCount'
          readOnly: true
        player_count_id:
          type: integer
          writeOnly: true
        age_group:
          allOf:
          - $ref: '#/components/schemas/AgeGroup'
          readOnly: true
        age_group_id:
          type: integer
          writeOnly: true
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          readOnly: true
        duration_id:
          type: integer
          writeOnly: true
        publisher:
          allOf:
          - $ref: '#/components/schemas/Publisher'
          readOnly: true
        publisher_name:
          type: string
          writeOnly: true
        images:
          type: array
          items:
            type: string
          writeOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        rules_summary:
          type: string
        release_year:
          type: string
          format: date
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        discount_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - age_group
      - age_group_id
      - created_at
      - difficulty
      - difficulty_id
      - duration
      - duration_id
      - genre
      - genre_ids
      - id
      - mechanic
      - mechanic_ids
      - player_count
      - player_count_id
      - price
      - publisher
      - publisher_name
      - release_year
      - title
      - type
      - type_ids
      - updated_at
    Genre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Mechanic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    PatchedGame:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        genre:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
          readOnly: true
        genre_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        type:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          readOnly: true
        type_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        mechanic:
          type: array
          items:
            $ref: '#/components/schemas/Mechanic'
          readOnly: true
        mechanic_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        difficulty:
          allOf:
          - $ref: '#/components/schemas/DifficultyLevel'
          readOnly: true
        difficulty_id:
          type: integer
          writeOnly: true
        player_count:
          allOf:
          - $ref: '#/components/schemas/PlayerCount'
          readOnly: true
        player_count_id:
          type: integer
          writeOnly: true
        age_group:
          allOf:
          - $ref: '#/components/schemas/AgeGroup'
          readOnly: true
        age_group_id:
          type: integer
          writeOnly: true
        duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          readOnly: true
        duration_id:
          type: integer
          writeOnly: true
        publisher:
          allOf:
          - $ref: '#/components/schemas/Publisher'
          readOnly: true
        publisher_name:
          type: string
          writeOnly: true
        images:
          type: array
          items:
            type: string
          writeOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        rules_summary:
          type: string
        release_year:
          type: string
          format: date
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        discount_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PlayerCount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Publisher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Type:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
